# Global settings for all agents
settings:
  # The output directory for the composed prompts.
  output_dir: "composed_prompts"
  # The directory where Jinja2 templates are located.
  templates_dir: "templates"
  # A global template to be used by agents that don't specify their own.
  template: "master.jinja2"
  # Controls whether variables ({{ VAR }}) are substituted in files included via 'include'
  # or 'read_file' (in Jinja2). Set to 'false' to include raw file content.
  substitute_in_included_files: true
  # Controls whether warnings are shown for variables that are referenced but not defined.
  # Can be overridden per agent. Default is true (warnings enabled).
  warn_on_missing_variables: true

# Global variables available to all agents.
# These can be overridden by agent-specific variables.
variables:
  project_name: "Prompt Scribe"
  rules_path: "includes/development-rules.md"
  persona_path: "personas/code-reviewer.md"
  # Example of an absolute path. Replace with a real path on your system.
  architecture_doc: "path/to/your/ARCHITECTURE.md"

agents:
  # --- Example 1: A comprehensive agent using the "Simple Assembler" ---
  code-reviewer:
    variables:
      # This overrides the global 'project_name' for this agent only.
      project_name: "DocuScribe"

    assembly:
      # 1. You can include content directly from a file via a variable.
      - include: persona_path
      - separator: "---"
      # 2. You can also have inline content with variable substitution.
      - content: |
          You are a senior AI developer for the `{{ project_name }}` project.
          Your main task is to provide a thorough and constructive code review.
      - separator: "---"
      # 3. Use headers and include other files.
      - h2: "ðŸ“œ Key Development Rules"
      - include: rules_path
      - separator: "---"
      # 4. Include a file using an absolute path variable.
      - h2: "ðŸ“„ Project Architecture"
      - include: architecture_doc

  # --- Example 2: An agent that uses the GLOBAL template defined in settings ---
  global-template-agent:
    # This agent has no 'assembly' or 'template' key, so it falls back
    # to using the global 'template: master.jinja2' from the settings.
    output_file: "global_template_example.md"
    variables:
      main_title: "Global Template Report"
      report_type: "daily"
      data_source_file: "includes/development-rules.md"

  # --- Example 3: An agent that OVERRIDES the global template ---
  advanced-report-generator:
    template: "report.jinja2" # This agent provides its own template.
    # The output path can be relative and go outside the default output_dir.
    output_file: "../custom_outputs/final_report.txt"
    variables:
      report_type: "weekly"
      # This variable can be used inside the Jinja2 template, for example, to load data.
      data_source: "includes/source-data.json"
